//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\1.12.2"!

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.entity.Entity
 *  net.minecraft.network.Packet
 *  net.minecraft.network.play.client.CPacketEntityAction
 *  net.minecraft.network.play.client.CPacketEntityAction$Action
 *  net.minecraft.network.play.server.SPacketEntityStatus
 *  net.minecraft.network.play.server.SPacketPlayerPosLook
 *  net.minecraft.world.World
 *  net.minecraftforge.fml.common.eventhandler.SubscribeEvent
 */
package cascade.features.modules.exploit;

import cascade.Cascade;
import cascade.event.events.MoveEvent;
import cascade.event.events.PacketEvent;
import cascade.features.modules.Module;
import cascade.features.setting.Setting;
import cascade.util.misc.Timer;
import cascade.util.player.MovementUtil;
import cascade.util.player.PlayerUtil;
import net.minecraft.entity.Entity;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketEntityAction;
import net.minecraft.network.play.server.SPacketEntityStatus;
import net.minecraft.network.play.server.SPacketPlayerPosLook;
import net.minecraft.world.World;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class LiquidFlight
extends Module {
    Setting<Float> wFactor = this.register(new Setting<Float>("WFactor", Float.valueOf(7.5f), Float.valueOf(0.1f), Float.valueOf(80.0f)));
    Setting<Float> lFactor = this.register(new Setting<Float>("LFactor", Float.valueOf(30.0f), Float.valueOf(0.1f), Float.valueOf(250.0f)));
    Setting<Double> clear = this.register(new Setting<Double>("Clear", 0.5, 0.5, 2.0));
    Setting<Boolean> doubleS = this.register(new Setting<Boolean>("Double", false));
    static LiquidFlight INSTANCE;
    Timer timer = new Timer();
    public boolean isValid;
    public int ticks;

    public LiquidFlight() {
        super("LiquidFlight", Module.Category.EXPLOIT, "Longjump for liquids");
        INSTANCE = this;
    }

    public static LiquidFlight getInstance() {
        if (INSTANCE == null) {
            INSTANCE = new LiquidFlight();
        }
        return INSTANCE;
    }

    @Override
    public void onToggle() {
        if (LiquidFlight.fullNullCheck()) {
            return;
        }
        this.isValid = false;
        this.timer.reset();
        this.ticks = 0;
    }

    @Override
    public void onUpdate() {
        if (LiquidFlight.fullNullCheck()) {
            return;
        }
        if (this.timer.passedMs((long)(this.clear.getValue() * 200.0))) {
            this.ticks = this.ticks - 1 >= 0 ? --this.ticks : 0;
        }
    }

    @SubscribeEvent
    public void onPacketReceive(PacketEvent.Receive e) {
        SPacketEntityStatus p;
        if (LiquidFlight.fullNullCheck() || this.isDisabled() || e.getStage() != 0) {
            return;
        }
        if (e.getPacket() instanceof SPacketEntityStatus && (p = (SPacketEntityStatus)e.getPacket()).getOpCode() == 2 && p.getEntity((World)LiquidFlight.mc.world).getEntityId() == LiquidFlight.mc.player.getEntityId()) {
            this.ticks += this.doubleS.getValue() != false ? 10 : 5;
            this.timer.reset();
            this.isValid = true;
        }
        if (e.getPacket() instanceof SPacketPlayerPosLook) {
            this.isValid = false;
            this.timer.reset();
            this.ticks = 0;
        }
    }

    @SubscribeEvent
    public void onMove(MoveEvent e) {
        if (!MovementUtil.isMoving() || this.isDisabled()) {
            return;
        }
        if (Cascade.packetManager.getCaughtPPS()) {
            return;
        }
        if (PlayerUtil.isInLiquid() && !LiquidFlight.mc.player.onGround && this.ticks > 0 && this.isValid) {
            mc.getConnection().sendPacket((Packet)new CPacketEntityAction((Entity)LiquidFlight.mc.player, CPacketEntityAction.Action.START_SPRINTING));
            LiquidFlight.mc.player.setSprinting(true);
            e.setX(e.getX() * (double)(LiquidFlight.mc.player.isInLava() ? this.lFactor.getValue() : this.wFactor.getValue()).floatValue());
            e.setY(e.getY() * 0.01);
            e.setZ(e.getZ() * (double)(LiquidFlight.mc.player.isInLava() ? this.lFactor.getValue() : this.wFactor.getValue()).floatValue());
        }
    }
}

